import{I as P,a8 as I,H as x,M as w,O as u}from"./index-CKF4anYh.js";const S=1,o=.5,p=0,y=0,r=0,z=1;class D{constructor(){this._paths=[],this._reverse=!1,this._size={width:0,height:0},this._scale=1,this._offset={x:0,y:0,mode:"percent"},this._width=0}generate(t,s){const a=t.container,h=a.retina.pixelRatio;t.svgDirection===void 0&&(t.svgDirection=P()>I?0:1),t.svgPathIndex===void 0&&(t.svgPathIndex=Math.floor(Math.random()*this._paths.length)),t.svgSpeed===void 0&&(t.svgSpeed=t.velocity.mult((t.retina.moveSpeed??S)*o).length),t.svgStep===void 0&&(t.svgStep=x({min:0,max:this._paths[t.svgPathIndex].length})*h),t.svgOffset===void 0&&(t.svgOffset={width:x({min:-this._width*o,max:this._width*o})*h,height:x({min:-this._width*o,max:this._width*o})*h}),t.svgInitialPosition===void 0&&(t.svgInitialPosition={...t.position}),t.velocity.x=0,t.velocity.y=0,t.svgDirection===0?t.svgStep+=t.svgSpeed*s.factor:t.svgStep-=t.svgSpeed*s.factor;let e=this._paths[t.svgPathIndex];if(e){const i=e.length,n=1;t.svgStep>=i?(t.svgPathIndex=t.svgPathIndex+n,t.svgPathIndex>=this._paths.length&&(this._reverse?(t.svgPathIndex=this._paths.length-n,t.svgDirection=1):(t.svgPathIndex=0,t.svgStep=0))):t.svgStep<=p&&(t.svgPathIndex=t.svgPathIndex-n,t.svgPathIndex<y&&(this._reverse?(t.svgPathIndex=0,t.svgDirection=0):(t.svgPathIndex=this._paths.length-n,e=this._paths[t.svgPathIndex],t.svgStep=e.length))),e=this._paths[t.svgPathIndex]}if(e){const i=e.element,n=i.getPointAtLength(t.svgStep),d=t.container.canvas.size,f=w(this._offset,d),g=this._scale*h;t.position.x=(n.x-this._size.width*o)*g+t.svgInitialPosition.x+f.x+t.svgOffset.width,t.position.y=(n.y-this._size.height*o)*g+t.svgInitialPosition.y+f.y+t.svgOffset.height}return u.origin}init(t){const s=t.actualOptions.particles.move.path.options,a=s.position??this._offset;if(this._reverse=s.reverse??this._reverse,this._scale=s.scale??z,this._offset.x=a.x,this._offset.y=a.y,this._offset.mode=a.mode,this._width=s.width??r,s.url&&!s.path){const h=s.url;(async()=>{const e=await fetch(h),i=await e.text(),n=new DOMParser,d=n.parseFromString(i,"image/svg+xml"),f=0,g=d.getElementsByTagName("svg")[f];let v=g.getElementsByTagName("path");v.length||(v=d.getElementsByTagName("path")),this._paths=[];for(let _=0;_<v.length;_++){const m=v.item(_);m&&this._paths.push({element:m,length:m.getTotalLength()})}this._size.height=parseFloat(g.getAttribute("height")??"0"),this._size.width=parseFloat(g.getAttribute("width")??"0")})()}else if(s.path){const h=s.path;this._paths=[];for(const e of h.data){const i=document.createElementNS("http://www.w3.org/2000/svg","path");i.setAttribute("d",e),this._paths.push({element:i,length:i.getTotalLength()})}this._size.height=h.size.height,this._size.width=h.size.width}}reset(){}update(){}}export{D as SVGPathGenerator};
